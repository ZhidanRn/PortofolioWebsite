[
        {
            "id": "1",
            "title": "E-Comerce App",
            "image": "assets/images/portfolio2.jpg",
            "tools": ["ReactJs", "Redux","Tailwind CSS"],
            "description": "The objective of this project is to develop a fully functional e-commerce web application using ReactJS for the front-end and the FakeStore API for the back-end data. The application aims to provide users with a seamless shopping experience by displaying a variety of products and enabling product search.",
            "keyfeatures" : ["Product Listing: Display a comprehensive list of products fetched from the FakeStore API, including product images, names, descriptions, prices, and categories.", "Product Details: Allow users to view detailed information about a selected product, including a larger image, full description and price", "Category-Based Filtering: Enable users to filter products based on categories, allowing them to browse through specific types of products easily.","Search Functionality: Implement a search bar that enables users to find products by name or category quickly and efficiently.", "Cart Management: Enable users to add products to a shopping cart, update product quantities, and remove products from the cart.", "Responsive Design: Ensure the application is fully responsive and provides a consistent user experience across various devices and screen sizes."],
            "contribute": "",
            "linklive" : "https://eccomerce-apps.vercel.app/",
            "linksc" : "https://github.com/ZhidanRn/eccomerceReactJs"
        },

        {
            "id": "2",
            "title": "CRUD",
            "image": "assets/images/portfolio3.jpg",
            "tools": ["NextJs","TypeScript", "Tailwind CSS","Zod", "Prisma"],
            "description":"The web application simulates a simple content management system (CMS) where users can manage a collection of items. Each item can be created, viewed, updated, and deleted, showcasing the full cycle of CRUD operations. The application also includes a search feature, allowing users to find specific items quickly. To handle large datasets efficiently, pagination is implemented, ensuring that the user interface remains responsive and easy to navigate.",
            "keyfeatures": ["Create: Users can add new items to the system through a user-friendly form.","Read: Items are displayed in a list, with detailed views available for each item.","Update: Users can edit existing items, with changes being saved to the database.", "Delete: Items can be removed from the system.", "Search: A search bar allows users to quickly locate items by keywords, improving the user experience by making navigation more efficient.", "Pagination: Items are displayed in paginated views, with controls to navigate between pages, enhancing the application's performance and usability."],
            "contribute": "",
            "linklive" :"https://crudsearchpagination.vercel.app/contacts",
            "linksc" : "https://github.com/ZhidanRn/crud_search_pagination"
        },

        {
            "id": "3",
            "title": "SportsWear",
            "image": "assets/images/portfolio1.jpg",
            "tools": ["ReactJs", "Redux","Tailwind CSS", "NodeJs", "JsonWebToken", "SWR"],
            "description": "The Sportswear E-commerce Website is a comprehensive platform designed to cater to the needs of sportswear enthusiasts. It offers a wide range of sportswear products for men, women, and children. Developed as a final project for a bootcamp at harisenin.com.",
            "keyfeatures" :["Product Listing: Display a comprehensive list of sportswear products, including images, names, descriptions, prices, and categories.", "Product Details: Allow users to view detailed information about a selected product, including larger images, full descriptions, prices, and customer reviews.", "Category-Based Filtering: Enable users to filter products based on categories such as men, women, and children, allowing them to browse specific types of sportswear easily.","Search Functionality: Implement a search bar that enables users to find products quickly by name or category.", "Add-to-Cart Feature: Allow users to add products to a shopping cart, update product quantities, and remove products from the cart.", "User Authentication: Implement user authentication using JsonWebToken (JWT), allowing users to securely log in and manage their accounts.", "Responsive Design: Ensure the application is fully responsive and provides a consistent user experience across various devices and screen sizes.", "Efficient State Management: Utilize Redux for efficient state management, ensuring consistent application state across all components.", "Optimized Data Fetching: Use SWR (Stale-While-Revalidate) for optimized data fetching, ensuring the application always displays up-to-date information."],
            "contribute" : ["Category Integration: Developed the functionality to seamlessly integrate product categories into the website's structure, enabling organized navigation and product discovery.", "Add-to-Cart Feature: Implemented the add-to-cart functionality, allowing users to effortlessly add selected items to their shopping cart for subsequent checkout.", "Frontend and Backend Integration: Ensured smooth communication between the frontend and backend layers, facilitating seamless data exchange and user interactions.", "State Management: Contributed to the implementation of Redux for efficient state management, ensuring consistent application state across components."],
            "linklive" : "",
            "linksc" : "https://github.com/ZhidanRn/project-harisenin-fullstack-kel7"
            
        },

        {
            "id": "4",
            "title": "Netflix",
            "image": "assets/images/portfolio4.jpg",
            "tools": ["NextJs","TypeScript", "Tailwind CSS", "Shadcn/ui", "Prisma", "NextAuth"],
            "description":"The goal of this project is to create a fully functional Netflix clone web application using Next.js for the front-end, Prisma for the database interactions, and NextAuth for authentication. The application aims to replicate key features of Netflix, providing users with a seamless streaming experience, including user authentication, browsing movies and TV shows, and personalized recommendations.",
            "keyfeatures": ["User Authentication: Implement user login and registration functionalities using NextAuth, with support for multiple authentication providers such as Google, GitHub, and Email.","Movie and TV Show Listing: Display a curated list of movies and TV shows, fetched from a movie database API, including cover images, titles, genres, and ratings.", "Detailed View: Allow users to view detailed information about a selected movie or TV show, including a synopsis, cast, trailer, and streaming availability.", "Search and Filtering: Provide a search bar and filtering options to help users easily find movies or TV shows by title, genre, or rating.", "Watchlist: Enable users to add movies and TV shows to a watchlist for easy access and future viewing.", "Responsive Design: Ensure the application is fully responsive and offers a consistent and enjoyable user experience across various devices and screen sizes."],
            "contribute": "",
            "linklive" :"https://netflix-cloneapp16.vercel.app",
            "linksc" : "https://github.com/ZhidanRn/netflix-clone"
        }
]